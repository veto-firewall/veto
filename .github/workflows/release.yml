name: Release

on:
  workflow_dispatch:
    inputs:
      versionType:
        description: 'Version type (patch, minor, major)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      channel:
        description: 'Distribution channel for Mozilla Add-ons'
        required: true
        default: 'do-not-publish'
        type: choice
        options:
          - listed
          - unlisted
          - do-not-publish

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Update version
        run: |
          NEW_VERSION=$(npm version ${{ github.event.inputs.versionType }} --no-git-tag-version)
          echo "NEW_VERSION=${NEW_VERSION#v}" >> $GITHUB_ENV
          jq --arg version "${NEW_VERSION#v}" '.version = $version' src/manifest.json > src/manifest.json.tmp && mv src/manifest.json.tmp src/manifest.json
          npx prettier --write package*.json src/manifest.json

      - name: Create extension package
        run: npm run package

      - name: Install web-ext
        if: ${{ github.event.inputs.channel != 'do-not-publish' }}
        run: npm install -g web-ext

      - name: Submit to Mozilla Add-ons
        if: ${{ github.event.inputs.channel != 'do-not-publish' }}
        continue-on-error: true
        env:
          WEB_EXT_API_KEY: ${{ secrets.MOZILLA_JWT_ISSUER }}
          WEB_EXT_API_SECRET: ${{ secrets.MOZILLA_JWT_SECRET }}
        run: |
          timeout=360000

          echo "Submitting extension to Mozilla Add-ons"
          echo "Channel: ${{ github.event.inputs.channel }}"
          echo "Timeout: $((timeout / 1000)) seconds"
          echo "Status updates: https://addons.mozilla.org/en-US/developers/addon/veto-firewall/versions"

          mkdir -p web-ext-artifacts
          
          web-ext sign \
            --api-key="${WEB_EXT_API_KEY}" \
            --api-secret="${WEB_EXT_API_SECRET}" \
            --channel=${{ github.event.inputs.channel }} \
            --source-dir=dist/ \
            --artifacts-dir=web-ext-artifacts/ \
            --timeout=${timeout} \
            --no-input

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.name 'github-actions[bot]'
          git config --local user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git add package.json package-lock.json src/manifest.json
          git commit -m "Release v${NEW_VERSION}"
          git push origin main

          gh release create "v${NEW_VERSION}" \
            --title "VETO v${NEW_VERSION}" \
            --generate-notes \
            web-ext-artifacts/*.{zip,xpi} dist/*.zip
